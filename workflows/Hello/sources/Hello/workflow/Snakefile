"""Hello World!

This is a simple example module that demonstrates how to use GRAPEVNE modules. This module displays an image on the screen in a platform-independent way. The module touches an output file that we call a 'trigger' to signify that the module has completed successfully. The name of the trigger file is configurable.

Params:
    Triggers:
        Done (str): The name of the trigger file that will be touched when the module completes successfully.
"""
configfile: "config/config.yaml"
from grapevne_helper import import_grapevne  # Import the bundled GRAPEVNE helper

grapevne = import_grapevne(workflow)  # Use the helper to import GRAPEVNE
                                      # You can specify version requirements here, e.g.
                                      #  import_grapevne(workflow, version="0.2")

globals().update(vars(grapevne))      # For convenience, we expose all variables from
                                      # the GRAPEVNE module


# This is a single rule module that displays an image on the screen
rule all:
    input:
        # The only input here is a resource (payload) file that is an image
        imgfile = resource("Hello.png"),
    output:
        temp(  # Output is temporary
            touch(  # Touch (create an empty file) to signify job completion
                output(  # Point to the output file path
                    # Name of the trigger file, user specified in the parameters
                    params("Triggers", "Done")
                )
            )
        )
    run:
        # This is a platform-independent way to display an image
        import sys
        import subprocess
        from pathlib import Path

        imageViewerFromCommandLine = {
            'linux':'xdg-open',
            'win32':'explorer',
            'darwin':'open'
        }[sys.platform]
        subprocess.run([imageViewerFromCommandLine, input.imgfile])

# See `.test.sh` for test execution.
# `_test` rules are automatically excluded from GRAPEVNE workflows.
rule _test:
    input:
        # This rule will only succeed if the output of the `all` rule is present,
        # indicating rule completion
        outfile = output(params("Triggers", "Done"))
